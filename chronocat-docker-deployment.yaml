apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: chronocat-docker
  name: chronocat-docker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: chronocat-docker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml convert
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: chronocat-docker
    spec:
      containers:
        - name: chronocat-docker
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: VNC_PASSWD
              value: vncpasswd
          image: swr.cn-south-1.myhuaweicloud.com/imjcr/chronocat:latest
          ports:
            - containerPort: 5500
              protocol: TCP
            - containerPort: 5900
              protocol: TCP
            - containerPort: 6081
              protocol: TCP
          tty: true
          volumeMounts:
            - mountPath: /home/monokai/.chronocat/config
              name: chronocat-docker-claim0
      restartPolicy: Always
      volumes:
        - name: chronocat-docker-claim0
          persistentVolumeClaim:
            claimName: chronocat-docker-claim0

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: chronocat-docker
  name: chronocat-docker
spec:
  ports:
    - name: "chronocat"
      port: 5500
      targetPort: 5500
  selector:
    io.kompose.service: chronocat-docker


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: chronocat-docker-claim0
  name: chronocat-docker-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
